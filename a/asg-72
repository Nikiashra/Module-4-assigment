import 'dart:async';
import 'package:flutter/material.dart';
import 'package:permission_handler/permission_handler.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      title: "Call Permission",
      debugShowCheckedModeBanner: false,
      home: CallPage(),
    );
  }
}

class CallPage extends StatefulWidget {
  const CallPage({super.key});

  @override
  State<CallPage> createState() => _CallPageState();
}

class _CallPageState extends State<CallPage> {
  @override
  void initState() {
    super.initState();
    _checkPermission();
  }

  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Call App"),
        backgroundColor: Colors.orangeAccent,
      ),
      body: const Center(
        child: Text("Wel Come to Call Permission App",),
      ),
    );
  }

  Future<void> _checkPermission() async {
    PermissionStatus status = await Permission.phone.status;
    if (status != PermissionStatus.granted) {
      _showPermissionDialog();
    }
  }

  void _showPermissionDialog() {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return PermissionDialog(
          onAllow: () async {
            Navigator.of(context).pop();
            openAppSettings();
          },
          onDeny: () {
            Navigator.of(context).pop();
            _handlePermissionDenied();
          },
        );
      },
    );
  }

  void _handlePermissionDenied() {
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(
          content: Text('Permission denied. You cannot make phone calls.')),
    );
  }
}

class PermissionDialog extends StatelessWidget {
  final VoidCallback onAllow;
  final VoidCallback onDeny;

  PermissionDialog({required this.onAllow, required this.onDeny});

  @override
  Widget build(BuildContext context) {
    return AlertDialog(
      title: Text('Permission Required'),
      content: Text('This app needs phone call permissions to proceed.'),
      actions: [
        ElevatedButton(
          onPressed: onDeny,
          child: Text('Deny'),
        ),
        ElevatedButton(
          onPressed: onAllow,
          child: Text('Allow'),
        ),
      ],
    );
  }
}
